{"version":3,"sources":["Components/Layout/Footer.js","Components/Sources/Dialogs/Create.js","Components/Sources/Dialogs/AboutUs.js","Components/Layout/Header.js","Components/Sources/MediaQ.js","Components/Search/FoodsToSearchChips.js","Components/Sources/Dialogs/Recipe/ListRecipes.js","Components/Sources/Dialogs/Recipe/Recipe.js","Components/Sources/Dialogs/Recipes.js","Components/Search/Search.js","Components/Sources/index.js","store.js","Components/App.js","index.js","Components/Sources/img/main.jpg","Components/Sources/Dialogs/img/jam.png"],"names":["Footer","nutrients","category","onSelect","index","findIndex","nutrient","Fragment","Paper","position","style","background","Tabs","value","indicatorColor","onChange","e","ind","centered","Tab","label","map","val","key","href","textDecoration","target","rel","Typography","color","textAlign","paddingTop","Create","getSource","React","useState","open","setOpen","handleClose","setSource","title","info","addedSource","handleTextField","addedSourcePropertyName","event","handleAdded","textFieldStyle","width","margin","Button","onClick","fontSize","Dialog","onClose","PaperProps","backgroundColor","DialogTitle","id","DialogContent","DialogContentText","onSubmit","preventDefault","TextField","variant","multiline","rows","FormControl","InputLabel","Select","MenuItem","DialogActions","AboutUs","Header","AppBar","Toolbar","flex","MediaQ","px","useMediaQuery","ChipsArray","foodToSearch","onDeleteFoodToSearch","chipStyle","buttonStyle","length","foodId","Chip","onDelete","bind","IconButton","type","useStyles","makeStyles","theme","root","inline","display","trimStr","str","limit","substr","Math","min","lastIndexOf","ListRecipes","searchResults","showRecipe","setShowRecipe","classes","List","className","recipeObj","ListItem","alignItems","image","borderRadius","ListItemAvatar","Avatar","alt","source","src","height","ListItemText","primary","secondary","component","healthLabels","slice","join","Recipe","textTransform","maxHeight","Grid","item","xs","marginTop","url","Recipes","setSearchResults","isThereNoResults","setIsThereNoResults","Image","maxWidth","backdrop","zIndex","drawer","Search","foodToSearchQuery","recipeDetails","setRecipeDetails","getRecipes","a","axios","res","recipeObjArr","data","hits","obj","recipe","alert","Backdrop","CircularProgress","split","sources","sourceId","onLookFor","sourceIdObj","find","paper","padding","marginBottom","overflowY","wordWrap","styles","paperOne","marginRight","paperTwo","minHeight","paperThree","paddingLeft","paddingRight","backgroundSize","container","sm","button","ListItemSecondaryAction","edge","paddingBottom","App","state","handleSourceSelected","setState","sourceSelected","handleCategorySelected","handleSourceAdded","addedObj","handleSourceDeleted","filter","sourceObj","handleFoodToSearch","includes","handleDeleteFoodToSearch","foodToDeleteId","food","forEach","Object","entries","this","getSourcesByNutrients","Component","createMuiTheme","palette","main","green","ReactDOM","render","ThemeProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5fb2cd63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Tabs, Tab, Typography, Paper } from \"@material-ui/core\";\r\n\r\nexport default function Footer({ nutrients, category, onSelect }) {\r\n  const index = category\r\n    ? nutrients.findIndex(nutrient => nutrient === category) + 1\r\n    : 0;\r\n  const selectBasedOnIndex = (e, ind) => {\r\n    onSelect(ind === 0 ? \"\" : nutrients[ind - 1]);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Paper position=\"static\" style={{ background: \"#2e7d32\" }}>\r\n        <Tabs\r\n          value={index}\r\n          indicatorColor=\"secondary\"\r\n          onChange={selectBasedOnIndex} //onChange CB param are event/index of the tab where it happened\r\n          centered\r\n        >\r\n          <Tab label=\"All\" />\r\n          {nutrients.map(val => (\r\n            <Tab label={val} key={val} />\r\n          ))}\r\n        </Tabs>\r\n      </Paper>\r\n      <footer>\r\n        <a\r\n          href=\"https://www.lmehdi.com\"\r\n          style={{ textDecoration: \" none\" }}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Typography\r\n            color=\"primary\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              paddingTop: \"5px\"\r\n            }}\r\n          >\r\n            Copyright &copy; 2019 - El Mehdi Naami\r\n          </Typography>\r\n        </a>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddCircleOutlineRoundedIcon from \"@material-ui/icons/AddCircleOutlineRounded\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nexport default function Create({ getSource }) {\r\n  // related to the opening and closing of the dialog\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    //basically cleans the state\r\n    setOpen(false);\r\n    setSource({\r\n      title: \"\",\r\n      info: \"\",\r\n      nutrients: \"\"\r\n    });\r\n  };\r\n  // related to the text fields\r\n  const [addedSource, setSource] = React.useState({\r\n    title: \"\",\r\n    info: \"\",\r\n    nutrients: \"\"\r\n  });\r\n\r\n  const handleTextField = addedSourcePropertyName => event => {\r\n    setSource({\r\n      ...addedSource,\r\n      ...{ [addedSourcePropertyName]: event.target.value }\r\n    });\r\n  };\r\n  //related to the button and the form submit of the dialog\r\n  const handleAdded = () => {\r\n    const { title, nutrients } = addedSource;\r\n    // checking if the user filled the form correctly before adding to the state\r\n    if (title && nutrients) {\r\n      getSource(addedSource);\r\n      handleClose();\r\n    }\r\n  };\r\n  //styling\r\n  const textFieldStyle = { width: \"95%\", margin: \"5px\" };\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClickOpen}>\r\n        <AddCircleOutlineRoundedIcon style={{ fontSize: \"50px\" }} />\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#795548\"\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add your favorite foods\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can add your favorite sources of macronutrients.\r\n          </DialogContentText>\r\n          <form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              handleAdded();\r\n            }}\r\n          >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              label=\"Source name\"\r\n              onChange={handleTextField(\"title\")}\r\n              style={textFieldStyle}\r\n            />\r\n            <br />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              label=\"Information about the source\"\r\n              multiline\r\n              rows=\"4\"\r\n              onChange={handleTextField(\"info\")}\r\n              style={textFieldStyle}\r\n            />\r\n            <br />\r\n            <FormControl style={textFieldStyle} color=\"secondary\">\r\n              <InputLabel>What macronutrient?</InputLabel>\r\n              <Select\r\n                value={addedSource.nutrients}\r\n                onChange={handleTextField(\"nutrients\")}\r\n              >\r\n                <MenuItem value={\"carbs\"}>Carbs</MenuItem>\r\n                <MenuItem value={\"proteins\"}>Proteins</MenuItem>\r\n                <MenuItem value={\"fats\"}>Fats</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleAdded} variant=\"contained\" color=\"primary\">\r\n            Add food source\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\n\r\nexport default function AboutUs() {\r\n  // related to the opening and closing of the dialog\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    //basically cleans the state\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button onClick={handleClickOpen}>\r\n        <HelpOutlineIcon style={{ fontSize: \"50px\" }} />\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#795548\"\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">About This App</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can add and save your favorite sources of macronutrients with\r\n            the plus icon on the top right. You can then specify a food\r\n            combination and search for its recipes.\r\n            <br />\r\n            You can also add details to your recipes (eg: Peanut-Free,\r\n            Sugar-Free, Alcohol-Free).\r\n            <br />\r\n            All the recipes you will get will be 100% vegan.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport Create from \"../Sources/Dialogs/Create\";\r\nimport AboutUs from \"../Sources/Dialogs/AboutUs\";\r\n\r\nexport default function Header({ getSource }) {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h4\" color=\"inherit\" style={{ flex: 1 }}>\r\n          Green Recipes\r\n        </Typography>\r\n        <AboutUs />\r\n        <Create getSource={getSource} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function MediaQ(px) {\r\n  return useMediaQuery(`(min-width:${px})`);\r\n}\r\n","import React from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MediaQ from \"../Sources/MediaQ\";\r\n\r\nexport default function ChipsArray({ foodToSearch, onDeleteFoodToSearch }) {\r\n  //Styling and mediaQ\r\n  const chipStyle = {\r\n    margin: \"5px\",\r\n    backgroundColor: \"#2e7d32\",\r\n    fontSize: \"15px\"\r\n  };\r\n  const buttonStyle = {\r\n    fontSize: \"20px\"\r\n  };\r\n  if (MediaQ(\"600px\")) {\r\n    chipStyle.fontSize = \"30px\";\r\n    buttonStyle.fontSize = \"30px\";\r\n  }\r\n  if (!foodToSearch || foodToSearch.length === 0) {\r\n    return (\r\n      <div>\r\n        <Chip label=\"Add foods to search their recipes\" style={chipStyle} />\r\n        <IconButton style={buttonStyle} type=\"submit\">\r\n          <SearchIcon />\r\n          Search\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        {foodToSearch.map(foodId => {\r\n          return (\r\n            <Chip\r\n              key={foodId}\r\n              label={foodId}\r\n              onDelete={onDeleteFoodToSearch.bind(null, foodId)}\r\n              style={chipStyle}\r\n            />\r\n          );\r\n        })}\r\n        <IconButton style={buttonStyle} type=\"submit\">\r\n          <SearchIcon /> Search\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"#795548\",\r\n    textAlign: \"center\"\r\n  },\r\n  inline: {\r\n    display: \"inline\"\r\n  }\r\n}));\r\n\r\n// reducing title length\r\nconst trimStr = (str, limit = 35) => {\r\n  if (str.length > limit) {\r\n    //trim the string to the maximum length\r\n    str = str.substr(0, limit);\r\n\r\n    //re-trim if we are in the middle of a word\r\n    str = str.substr(0, Math.min(str.length, str.lastIndexOf(\" \")));\r\n\r\n    //add ...\r\n    str = `${str}...`;\r\n  }\r\n\r\n  return str;\r\n};\r\nexport default function ListRecipes({\r\n  searchResults,\r\n  showRecipe,\r\n  setShowRecipe\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  return !showRecipe ? (\r\n    <DialogContent>\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        {searchResults.length > 3\r\n          ? `TOP ${searchResults.length} RECIPES WITH THIS\r\n          FOOD COMBINATION`\r\n          : searchResults.length !== 1\r\n          ? `WE'VE GOT YOU\r\n          ${searchResults.length} RECIPES WITH THIS FOOD COMBINATION`\r\n          : `WE'VE GOT YOU\r\n          ONE RECIPE WITH THIS FOOD COMBINATION`}\r\n      </DialogTitle>\r\n\r\n      <List className={classes.root}>\r\n        {searchResults.map(recipeObj => (\r\n          <ListItem\r\n            alignItems=\"flex-start\"\r\n            key={recipeObj.image}\r\n            onClick={() => {\r\n              setShowRecipe(recipeObj);\r\n            }}\r\n          >\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#2e7d32\",\r\n                borderRadius: \"15px\",\r\n                width: \"100%\"\r\n              }}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt={recipeObj.source}\r\n                  src={recipeObj.image}\r\n                  style={{ width: \"60px\", height: \"60px\" }}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={trimStr(recipeObj.label)}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      className={classes.inline}\r\n                      color=\"textPrimary\"\r\n                    >\r\n                      Health Labels\r\n                    </Typography>\r\n                    — {recipeObj.healthLabels.slice(0, 3).join(\", \")}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </Button>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </DialogContent>\r\n  ) : null;\r\n}\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function Recipe({ showRecipe, setShowRecipe }) {\r\n  const style = {\r\n    image: {\r\n      borderRadius: \"15px\",\r\n      maxHeight: \"50%\"\r\n    }\r\n  };\r\n  return showRecipe ? (\r\n    <DialogContent>\r\n      <DialogTitle\r\n        id=\"form-dialog-title\"\r\n        style={{ textTransform: \"capitalize\" }}\r\n      >\r\n        {showRecipe.label}\r\n      </DialogTitle>\r\n      <img\r\n        src={showRecipe.image}\r\n        alt={showRecipe.label}\r\n        style={style.image}\r\n      ></img>\r\n      <Grid item xs={12} style={{ marginTop: \"15px\" }}>\r\n        <Typography style={{ display: \"inline\", textTransform: \"capitalize\" }}>\r\n          HEALTH LABELS:\r\n        </Typography>\r\n        {showRecipe.healthLabels.join(\", \")}\r\n        <br />\r\n        <br />\r\n        <em>How To Cook It ?</em>\r\n        <br />\r\n        This recipe was carefully designed and tested by{\" \"}\r\n        <span style={{ textDecoration: \"underline\" }}>\r\n          {showRecipe.source}\r\n        </span>{\" \"}\r\n        . Please check out directions at their website.\r\n        <br />\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          <a\r\n            href={showRecipe.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              borderRadius: \"15px\",\r\n              color: \"white\"\r\n            }}\r\n          >\r\n            Directions\r\n          </a>\r\n        </Button>\r\n      </Grid>\r\n    </DialogContent>\r\n  ) : null;\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ListRecipes from \"./Recipe/ListRecipes\";\r\nimport Recipe from \"./Recipe/Recipe\";\r\nimport Image from \"./img/jam.png\";\r\n\r\nexport default function Recipes({\r\n  searchResults,\r\n  setSearchResults,\r\n  isThereNoResults,\r\n  setIsThereNoResults\r\n}) {\r\n  // state\r\n  const [showRecipe, setShowRecipe] = React.useState(false);\r\n\r\n  // related to the cleaning of search results state by the opening and closing of the dialog\r\n  const handleClose = () => {\r\n    setSearchResults(\"\");\r\n    setIsThereNoResults(false);\r\n    setShowRecipe(false);\r\n  };\r\n  //if there was results\r\n  if (searchResults.length > 0) {\r\n    return (\r\n      <Dialog\r\n        open={true}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            textAlign: \"center\",\r\n            backgroundColor: \"#795548\",\r\n            width: \"100vw\",\r\n            height: \"100vh\"\r\n          }\r\n        }}\r\n      >\r\n        <ListRecipes\r\n          searchResults={searchResults}\r\n          showRecipe={showRecipe}\r\n          setShowRecipe={setShowRecipe}\r\n        />\r\n        <Recipe showRecipe={showRecipe} setShowRecipe={setShowRecipe} />\r\n        <DialogActions>\r\n          {showRecipe ? (\r\n            <Button\r\n              onClick={() => {\r\n                setShowRecipe(false);\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              {\"<<\"}Go Back\r\n            </Button>\r\n          ) : null}\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n  //if there was no recipes\r\n  else if (isThereNoResults) {\r\n    return (\r\n      <Dialog\r\n        open={isThereNoResults}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            textAlign: \"center\",\r\n            background: `#795548`\r\n          }\r\n        }}\r\n      >\r\n        <DialogContent>\r\n          <DialogTitle id=\"form-dialog-title\">Oops! </DialogTitle>\r\n          <p> No recipe was found, please try another combination of food</p>\r\n\r\n          <img src={Image} alt=\"Trouble\" style={{ maxWidth: \"100%\" }}></img>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FoodsToSearchChips from \"./FoodsToSearchChips\";\r\nimport Recipe from \"../Sources/Dialogs/Recipes\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\"\r\n  }\r\n}));\r\n\r\nfunction Search({ foodToSearch, onDeleteFoodToSearch }) {\r\n  //recipe details and search state\r\n  const [recipeDetails, setRecipeDetails] = React.useState(\"\");\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  // state of the empty array search\r\n  const [isThereNoResults, setIsThereNoResults] = React.useState(false);\r\n  // loading state\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // getting the string query from the array of foodToSearch and their details\r\n  let foodToSearchQuery;\r\n\r\n  if (foodToSearch) {\r\n    foodToSearchQuery = [...foodToSearch, recipeDetails].join(\"-\");\r\n  }\r\n  // API Call method\r\n\r\n  const getRecipes = async () => {\r\n    if (foodToSearchQuery) {\r\n      try {\r\n        setOpen(true);\r\n        const res = await axios(\r\n          `https://api.edamam.com/search?q=${foodToSearchQuery}&app_id=1b892b69&from=0&to=4&app_key=19280bdd1375f97d6ff2354207cb89bf&health=vegan`\r\n        );\r\n        setOpen(false);\r\n        const recipeObjArr = res.data.hits.map(obj => obj.recipe);\r\n        //in case the array of recipes is empty\r\n        if (recipeObjArr.length === 0) {\r\n          setIsThereNoResults(true);\r\n        }\r\n\r\n        setSearchResults(recipeObjArr);\r\n      } catch (error) {\r\n        alert(\"we had an error please try again\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        getRecipes();\r\n      }}\r\n      style={{ textAlign: \"center\", marginTop: \"6vh\" }}\r\n    >\r\n      <Backdrop\r\n        className={classes.backdrop}\r\n        open={open}\r\n        onClick={() => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Recipe\r\n        searchResults={searchResults}\r\n        setSearchResults={setSearchResults}\r\n        isThereNoResults={isThereNoResults}\r\n        setIsThereNoResults={setIsThereNoResults}\r\n      />\r\n\r\n      <FoodsToSearchChips\r\n        onDeleteFoodToSearch={onDeleteFoodToSearch}\r\n        foodToSearch={foodToSearch}\r\n      />\r\n      <TextField\r\n        style={{ width: \"70%\", marginTop: \"2%\" }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        label=\"You can add details eg: gluten free,natural...\"\r\n        onChange={e => {\r\n          // Preparing the recipe details set by the user for the query (needs - instead of spaces)\r\n          setRecipeDetails(e.target.value.split(\" \").join(\"-\"));\r\n        }}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  ListItem,\r\n  List,\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemSecondaryAction\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Image from \"./img/main.jpg\";\r\nimport RestaurantMenuRoundedIcon from \"@material-ui/icons/RestaurantMenuRounded\";\r\nimport Search from \"../Search/Search\";\r\nimport MediaQ from \"./MediaQ\";\r\n\r\nexport default function index({\r\n  sources,\r\n  category,\r\n  sourceId,\r\n  foodToSearch,\r\n  onSelect,\r\n  onDelete,\r\n  onDeleteFoodToSearch,\r\n  onLookFor\r\n}) {\r\n  //destructuring the sources Arr to undo the entries function\r\n  const sourcesArr = [...sources[0][1], ...sources[1][1], ...sources[2][1]];\r\n  // The source object with the sourceId\r\n  const sourceIdObj = sourcesArr.find(obj => obj.id === sourceId);\r\n  //styling\r\n  const paper = {\r\n    padding: \"3vh\",\r\n    marginTop: 10,\r\n    marginBottom: 5,\r\n    overflowY: \"auto\",\r\n    background: `linear-gradient(to right bottom,rgba(121,85,72,0.90),rgba(121,85,72,0.90)),url(${Image})`,\r\n\r\n    wordWrap: \"break-word\"\r\n  };\r\n  const styles = {\r\n    paperOne: {\r\n      ...paper,\r\n      marginRight: \"5px\",\r\n      height: \"50vh\"\r\n    },\r\n    paperTwo: {\r\n      ...paper,\r\n      marginTop: 0,\r\n      marginBottom: \"1vh\",\r\n      minHeight: \"25vh\"\r\n    },\r\n    paperThree: {\r\n      ...paper,\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      marginTop: 0,\r\n      minHeight: \"35vh\",\r\n      backgroundSize: \"cover\"\r\n    }\r\n  };\r\n  //Using media queries\r\n  if (MediaQ(\"600px\")) {\r\n    styles.paperOne.height = \"67vh\";\r\n    styles.paperTwo.height = \"25vh\";\r\n    styles.paperTwo.marginTop = \"10px\";\r\n    styles.paperThree.height = \"25vh\";\r\n    styles.paperThree.marginTop = \"10px\";\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} sm={4}>\r\n        <Paper style={styles.paperOne}>\r\n          {sources.map(([nutrient, sources]) =>\r\n            !category || category === nutrient ? (\r\n              <React.Fragment key={nutrient}>\r\n                <Typography\r\n                  variant=\"h4\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {nutrient}\r\n                </Typography>\r\n\r\n                <List component=\"ul\">\r\n                  {sources.map(({ title, id }) => (\r\n                    <ListItem\r\n                      button\r\n                      key={title}\r\n                      onClick={() => {\r\n                        onSelect(id);\r\n                      }}\r\n                    >\r\n                      <ListItemText\r\n                        primary={title}\r\n                        style={{ textTransform: \"capitalize\" }}\r\n                      />\r\n                      <ListItemSecondaryAction>\r\n                        <IconButton onClick={onLookFor.bind(null, id)}>\r\n                          <RestaurantMenuRoundedIcon\r\n                            style={{ backgroundColor: \"#2e7d32\" }}\r\n                            color=\"secondary\"\r\n                          />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          edge=\"end\"\r\n                          onClick={onDelete.bind(null, id)}\r\n                        >\r\n                          <DeleteIcon\r\n                            style={{ backgroundColor: \"#3e2723\" }}\r\n                            color=\"secondary\"\r\n                          />\r\n                        </IconButton>\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </React.Fragment>\r\n            ) : null\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} sm={8}>\r\n        <Paper style={styles.paperTwo}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            style={{ paddingBottom: 20, textTransform: \"capitalize\" }}\r\n          >\r\n            {sourceIdObj ? sourceIdObj.title : \" Welcome \"}\r\n          </Typography>\r\n          <Typography variant=\"body1\">\r\n            {sourceIdObj ? (\r\n              sourceIdObj.info\r\n            ) : (\r\n              <React.Fragment>\r\n                Get your macronutrients with vegan recipes.\r\n                <br />\r\n                You can add your favorite foods to the food list with the plus\r\n                icon on the top right.\r\n              </React.Fragment>\r\n            )}\r\n          </Typography>\r\n        </Paper>\r\n        <Paper style={styles.paperThree}>\r\n          <Search\r\n            foodToSearch={foodToSearch}\r\n            onDeleteFoodToSearch={onDeleteFoodToSearch}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export const nutrients = [\"carbs\", \"proteins\", \"fats\"];\r\n\r\nexport const sources = [\r\n  {\r\n    id: \"Tofu\",\r\n    title: \"Tofu\",\r\n    info:\r\n      \"Tofu, also known as bean curd, is a food prepared by coagulating soy milk and then pressing the resulting curds into solid white blocks of varying softness\",\r\n    nutrients: \"proteins\"\r\n  },\r\n  {\r\n    id: \"Lentils\",\r\n    title: \"Lentils\",\r\n    info:\r\n      \"Red or green lentils contain plenty of protein, fiber, and key nutrients, including iron and potassium.\",\r\n    nutrients: \"proteins\"\r\n  },\r\n  {\r\n    id: \"Chickpeas\",\r\n    title: \"Chickpeas\",\r\n    info:\r\n      \"Chickpeas have an impressive nutrition profile. They contain a moderate amount of calories, providing 46 calories per 1-ounce (28-gram) serving.\",\r\n    nutrients: \"proteins\"\r\n  },\r\n  {\r\n    id: \"Edamame\",\r\n    title: \"Edamame\",\r\n    info:\r\n      \" Edamame are a whole protein source. Unlike most plant proteins, they provide all the essential amino acids your body needs.\",\r\n    nutrients: \"proteins\"\r\n  },\r\n  {\r\n    id: \"Potatoes\",\r\n    title: \"Potatoes\",\r\n    info:\r\n      \"Cooked potatoes with skin are a good source of many vitamins and minerals, such as potassium and vitamin C.\",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"yams\",\r\n    title: \"yams\",\r\n    info:\r\n      \"Yams are not only an excellent source of carbohydrates and fiber but also high in potassium and manganese, which are important for supporting bone health, growth, metabolism, and heart function .\",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"Oatmeal\",\r\n    title: \"Oatmeal\",\r\n    info:\r\n      \"One cup of oatmeal contains about 150 calories, 4 grams of fiber (about half soluble and half insoluble), and 6 grams of protein. In addition to fiber, oatmeal is rich in thiamin, magnesium, phosphorus, zinc, manganese, selenium, and iron.\",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"Rice\",\r\n    title: \"Rice\",\r\n    info:\r\n      \"White, long-grain rice: Raw, long-grain white rice is a relatively good source of energy, carbohydrates, calcium, iron, thiamin, pantothenic acid, folate and vitamin E, compared to maize, wheat and potatoes.\",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"Pasta\",\r\n    title: \"Pasta\",\r\n    info:\r\n      \"Rich in complex carbohydrates and protein, and low in fat, pasta can be a highly nutritious food, especially if it's made from whole wheat. \",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"Fruits\",\r\n    title: \"Fruits\",\r\n    info:\r\n      \"Fruits are sources of many essential nutrients that are underconsumed, including potassium, dietary fiber, vitamin C, and folate (folic acid)\",\r\n    nutrients: \"carbs\"\r\n  },\r\n  {\r\n    id: \"Coconut\",\r\n    title: \"Coconut\",\r\n    info:\r\n      \"Coconut is a high source of saturated fat in the form of medium-chain triglyceride, which function differently to the long-chain fatty acids found in animal products.\",\r\n    nutrients: \"fats\"\r\n  },\r\n  {\r\n    id: \"Avocado\",\r\n    title: \"Avocado\",\r\n    info:\r\n      \"Avocados are a great source of vitamins C, E, K, and B-6, as well as riboflavin, niacin, folate, pantothenic acid, magnesium, and potassium.\",\r\n    nutrients: \"fats\"\r\n  },\r\n  {\r\n    id: \"almond\",\r\n    title: \"almond\",\r\n    info:\r\n      \"Almonds Deliver a Massive Amount of Nutrients. Fiber: 3.5 grams. Protein: 6 grams. Fat: 14 grams (9 of which are monounsaturated) Vitamin E: 37% of the RDI.\",\r\n    nutrients: \"fats\"\r\n  },\r\n  {\r\n    id: \"peanut\",\r\n    title: \"peanut\",\r\n    info:\r\n      \"Peanuts are an excellent source of many vitamins and minerals. These include biotin, copper, niacin, folate, manganese, vitamin E, thiamine, phosphorus, and magnesium.\",\r\n    nutrients: \"fats\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { Header, Footer } from \"./Layout/index\";\r\nimport Sources from \"./Sources/index\";\r\nimport { nutrients, sources } from \"../store\";\r\n\r\nexport class App extends Component {\r\n  state = { sources };\r\n\r\n  //state functions\r\n  handleSourceSelected = id => {\r\n    this.setState({ sourceSelected: id });\r\n  };\r\n  handleCategorySelected = category => {\r\n    this.setState({ category });\r\n  };\r\n  handleSourceAdded = addedObj => {\r\n    addedObj.id = addedObj.title;\r\n    this.setState(({ sources }) => ({\r\n      sources: [...sources, addedObj]\r\n    }));\r\n  };\r\n  handleSourceDeleted = id => {\r\n    this.setState(({ sources }) => ({\r\n      sources: sources.filter(sourceObj => sourceObj.id !== id)\r\n    }));\r\n  };\r\n  handleFoodToSearch = id => {\r\n    this.setState(({ foodToSearch }) => {\r\n      if (foodToSearch) {\r\n        if (!foodToSearch.includes(id)) {\r\n          return {\r\n            foodToSearch: [...foodToSearch, id]\r\n          };\r\n        } else {\r\n          return {\r\n            foodToSearch: [...foodToSearch]\r\n          };\r\n        }\r\n      } else {\r\n        return { foodToSearch: [id] };\r\n      }\r\n    });\r\n  };\r\n  handleDeleteFoodToSearch = foodToDeleteId => {\r\n    this.setState(({ foodToSearch }) => ({\r\n      foodToSearch: foodToSearch.filter(food => food !== foodToDeleteId)\r\n    }));\r\n  };\r\n  //this method sorts sources based on the nutrient they provide\r\n  getSourcesByNutrients() {\r\n    const sources = {};\r\n    nutrients.forEach(nutrient => {\r\n      sources[nutrient] = this.state.sources.filter(source => {\r\n        return source.nutrients === nutrient;\r\n      });\r\n    });\r\n\r\n    return Object.entries(sources);\r\n  }\r\n\r\n  render() {\r\n    const sources = this.getSourcesByNutrients();\r\n\r\n    const { category, sourceSelected, foodToSearch } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Header getSource={this.handleSourceAdded} />\r\n        <Sources\r\n          sources={sources}\r\n          category={category}\r\n          foodToSearch={foodToSearch}\r\n          onSelect={this.handleSourceSelected}\r\n          sourceId={sourceSelected}\r\n          onDelete={this.handleSourceDeleted}\r\n          onLookFor={this.handleFoodToSearch}\r\n          onDeleteFoodToSearch={this.handleDeleteFoodToSearch}\r\n        />\r\n        <Footer\r\n          category={category}\r\n          nutrients={nutrients}\r\n          onSelect={this.handleCategorySelected}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: { main: green[800] },\r\n    secondary: { main: green[100] }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/main.560b74fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jam.f8cc6a25.png\";"],"sourceRoot":""}